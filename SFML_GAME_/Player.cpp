#include "Player.h"
#include "Pole.h"


Player::Player(String F, float X, float Y, float W, float H) {
	speed = 0;
	File = F;
	w = W; h = H;
	image.loadFromFile("sprite/" + File);
	texture.loadFromImage(image);                   //закидываем наше изображение в текстуру
	sprite.setTexture(texture);                    //заливаем спрайт текстурой
	x = X; y = Y;                                 //координата появления спрайта
	sprite.setTextureRect(IntRect(0, 0, w, h));  //Задаем спрайту один прямоугольник для вывода одного Персонажа	
	life = true;
	health = 3;
}
void Player::SetMove(float m_dir, float m_speed) {
	dir = m_dir;
	speed = m_speed;
}
void Player::SetSprite(float cntFrame, int one, int two, int three) {
	sprite.setTextureRect(IntRect(31 * int(cntFrame), one, two, three));
}
void Player::SetLife() {health -=1;}
Sprite Player::getSprite() { return sprite; }
void Player::update(float time) {
	switch (dir)                                 //реализуем поведение в зависимости от направления. (каждая цифра соответствует направлению)
	{
	case 0: dx = speed; dy = 0;   break;         //по иксу задаем положительную скорость, по игреку зануляем. получаем, что персонаж идет только вправо
	case 1: dx = -speed; dy = 0;   break;        //по иксу задаем отрицательную скорость, по игреку зануляем. получается, что персонаж идет только влево
	case 2: dx = 0; dy = speed;   break;         //по иксу задаем нулевое значение, по игреку положительное. получается, что персонаж идет только вниз
	case 3: dx = 0; dy = -speed;   break;        //по иксу задаем нулевое значение, по игреку отрицательное. получается, что персонаж идет только вверх
	}

	x += dx * time;                              //наше ускорение на время получаем смещение координат и как следствие движение
	y += dy * time;                              //аналогично по игреку

	speed = 0;                                   //зануляем скорость, чтобы персонаж остановился.
	sprite.setPosition(x, y);                    //выводим спрайт в позицию x y , посередине. бесконечно выводим в этой функции, иначе бы наш спрайт стоял на месте.
	interactionWithMap();
	if (health <= 0) { life = false;  } 
}

void Player::interactionWithMap()//ф-ция взаимодействия с картой
{

	for (int i = y / 32; i < (y + h) / 32; i++)//проходимся по тайликам, контактирующим с игроком, то есть по всем квадратикам размера 32*32, которые мы окрашивали в 9 уроке. про условия читайте ниже.
		for (int j = x / 32; j < (x + w) / 32; j++)//икс делим на 32, тем самым получаем левый квадратик, с которым персонаж соприкасается. (он ведь больше размера 32*32, поэтому может одновременно стоять на нескольких квадратах). А j<(x + w) / 32 - условие ограничения координат по иксу. то есть координата самого правого квадрата, который соприкасается с персонажем. таким образом идем в цикле слева направо по иксу, проходя по от левого квадрата (соприкасающегося с героем), до правого квадрата (соприкасающегося с героем)
		{
			if (TileMap1[i][j] == '0')//если наш квадратик соответствует символу 0 (стена), то проверяем "направление скорости" персонажа:
			{
				if (dy > 0)//если мы шли вниз,
				{
					y = i * 32 - h;//то стопорим координату игрек персонажа. сначала получаем координату нашего квадратика на карте(стены) и затем вычитаем из высоты спрайта персонажа.
				}
				if (dy < 0)
				{
					y = i * 32 + 32;//аналогично с ходьбой вверх. dy<0, значит мы идем вверх (вспоминаем координаты паинта)
				}
				if (dx > 0)
				{
					x = j * 32 - w;//если идем вправо, то координата Х равна стена (символ 0) минус ширина персонажа
				}
				if (dx < 0)
				{
					x = j * 32 + 32;//аналогично идем влево
				}
			}

			if (TileMap1[i][j] == 's') { //если символ равен 's' (камень)
				if (dy > 0)//если мы шли вниз,
				{
					y = i * 32 - h;//то стопорим координату игрек персонажа. сначала получаем координату нашего квадратика на карте(стены) и затем вычитаем из высоты спрайта персонажа.
				}
				if (dy < 0)
				{
					y = i * 32 + 32;//аналогично с ходьбой вверх. dy<0, значит мы идем вверх (вспоминаем координаты паинта)
				}
				if (dx > 0)
				{
					x = j * 32 - w;//если идем вправо, то координата Х равна стена (символ 0) минус ширина персонажа
				}
				if (dx < 0)
				{
					x = j * 32 + 32;//аналогично идем влево
				}
			}
			if (TileMap1[i][j] == 'z')//если наш квадратик соответствует символу 0 (стена), то проверяем "направление скорости" персонажа:
			{
				if (dy > 0)//если мы шли вниз,
				{
					y = i * 32 - h;//то стопорим координату игрек персонажа. сначала получаем координату нашего квадратика на карте(стены) и затем вычитаем из высоты спрайта персонажа.
				}
				if (dy < 0)
				{
					y = i * 32 + 32;//аналогично с ходьбой вверх. dy<0, значит мы идем вверх (вспоминаем координаты паинта)
				}
				if (dx > 0)
				{
					x = j * 32 - w;//если идем вправо, то координата Х равна стена (символ 0) минус ширина персонажа
				}
				if (dx < 0)
				{
					x = j * 32 + 32;//аналогично идем влево
				}
			}
		}
}
int Player::getX() {return x;}
int Player::getY() { return y; };
FloatRect Player::getRect() {
	return FloatRect(x, y, w, h);
}